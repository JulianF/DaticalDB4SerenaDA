<?xml version="1.0" encoding="utf-8"?>
<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <header>
    <identifier version="22" id="com.datical.integration.udeploy.DaticalDB4SerenaDA" name="Datical DB" />
    <description>Datical DB makes it incredibly easy to automate and
			manage database schema changes for high volume, complex releases,
			across any environment, for any database. No agents required.
		</description>
    <tag>Datical DB</tag>
  </header>

  <step-type name="Run Groovy Script">
    <description>Runs a Groovy Script using Datical DB REPL.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBScript" required="true">
      	<property-ui type="textBox" label="Datical DB Groovy Script"  description="Complete path to Groovy Script to run." />
		<value label="Unselected">unselected</value>
		<value label="Skip Baselined Tables">skip</value>
  		<value label="Force Meta Table Deletion">force</value>
      </property>
      <property name="daticalDBScriptArgs" required="false">
        <property-ui type="textAreaBox" label="Datical DB Groovy Script Arguments" description="Arguments to pass to Datical DB Groovy Script." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }
        
     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="groovyrun.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>


  <step-type name="Register and Baseline Datical DB Project">
    <description>Baselines a Datical DB Project using project_baseline.groovy.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBSkipForce" required="false">
      	<property-ui type="selectBox" label="Datical DB Skip Tables or Force Meta Table Deletion"  description="Flag to skip any table that has already been baselined Deploy Threshold or Flag to remove any pre-existing DATABASECHANGELOG and DATABASECHANGELOGLOCK tables (use with caution)" />
		<value label="Unselected">unselected</value>
		<value label="Skip Baselined Tables">skip</value>
  		<value label="Force Meta Table Deletion">force</value>
      </property>
      <property name="daticalDBSync" required="false">
        <property-ui type="checkBox" label="Datical DB Change Log Sync" description="Flag to optionally NOT run changelogSync on the Reference DB" />
      </property>
      <property name="daticalDBZipProject" required="false">
        <property-ui type="checkBox" label="Zip Project Directory" description="If checked, Datical DB will zip the newly created project directory" />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }
        
     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="groovybaselineproject.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Create Datical DB Project">
    <description>Creates a Datical DB Project using project_creator.groovy.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectName" required="true">
        <property-ui type="textBox" label="Datical DB Project Name" description="The new Datical DB project." default-value="."/>
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBProvisioningDir" required="true">
        <property-ui type="textBox" label="Datical DB Provisioning Directory" description="The full path that contains the data files: &lt;project_name&gt;;.project.tsv.txt, &lt;project_name&gt;;.dbdefs.tsv.txt and &lt;project_name&gt;;.pipelines.tsv.txt where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBReplace" required="false">
        <property-ui type="checkBox" label="Replace Existing Project" description="If checked, Datical DB will replace existing project directory" />
      </property>
      <property name="daticalDBZipProject" required="false">
        <property-ui type="checkBox" label="Zip Project Directory" description="If checked, Datical DB will zip the newly created project directory" />
      </property>
      <property name="daticalDBTestConnections" required="false">
        <property-ui type="checkBox" label="Test Connections" description="If checked, Datical DB test newly created database connections in the project." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }
        
     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="groovycreatenewproject.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>


  <step-type name="Get Datical DB Version">
    <description>Shows the Datical DB version.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="version.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Deploy with Datical DB">
    <description>Deploys a Datical DB project to a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBContext" required="false">
        <property-ui type="textBox" label="Datical DB Context" description="The Datical DB Context of your DB Server." />
      </property>
      <property name="daticalDBRollback" required="false">
        <property-ui type="checkBox" label="Automatic Rollback" description="If the Datical DB deploy fails, selecting this box will automatically rollback the server to the initial state using the rollback instructions specified in the Datical DB project and/or the Datical DB defaults." />
      </property>
      <property name="daticalDBExportSQL" required="false">
        <property-ui type="checkBox" label="Export SQL" description="If checked, Datical DB will export SQL to be run against the server." />
      </property>
      <property name="daticalDBExportRollbackSQL" required="false">
        <property-ui type="checkBox" label="Export Rollback SQL" description="If checked, Datical DB will export Rollback SQL to be run against the server." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
      <property name="daticalDBDeployThreshold" required="false">
      	<property-ui type="selectBox" label="Deploy Threshold"  description="Sets the deployment threshold for rules." />
		<value label="Stop on Error">stopOnError</value>
  		<value label="Stop on Warn">stopOnWarn</value>
		<value label="Deploy Always">deployAlways</value>
      </property>
      <property name="daticalDBLabels" required="false">
        <property-ui type="textBox" label="Datical DB Labels" description="The Datical DB Labels of the Change Sets to deploy." />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });

        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
              scanner.addLOI(lineNumber);        	
              var report = line.replace("Report ready at ", "");
              properties.put("DaticalReport", report);
              var reportDir = report.replace("deployReport.html", "");
              properties.put("DaticalReportDir", reportDir);
        });

        scanner.register("(?i)Generated SQL ready at ",  function(lineNumber, line) {
			  scanner.addLOI(lineNumber);
              var genSQL = line.replace("Generated SQL ready at ", "");
              properties.put("DaticalSQL", genSQL);
        });
        scanner.register("(?i)Generated rollback SQL ready at ",  function(lineNumber, line) {
              scanner.addLOI(lineNumber);
              var genExportSQL = line.replace("Generated rollback SQL ready at ", "");
              properties.put("DaticalRollbackSQL", genExportSQL);
        });

        
        //deploy
        scanner.register("(?i)Successfully deployed changes to",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Update Failed",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="deploy.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Validate and Forecast with Datical DB">
    <description>Validates and Forecasts a Datical DB project against a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBContext" required="false">
        <property-ui type="textBox" label="Datical DB Context" description="The Datical DB Context of your DB Server." />
      </property>
      <property name="daticalDBExportSQL" required="false">
        <property-ui type="checkBox" label="Export SQL" description="If checked, Datical DB will export SQL to be run against the server." />
      </property>
      <property name="daticalDBExportRollbackSQL" required="false">
        <property-ui type="checkBox" label="Export Rollback SQL" description="If checked, Datical DB will export Rollback SQL to be run against the server." />
      </property>
      <property name="daticalDBDeployThreshold" required="false">
      	<property-ui type="selectBox" label="Deploy Threshold"  description="Sets the deployment threshold for rules." />
		<value label="Stop on Error">stopOnError</value>
  		<value label="Stop on Warn">stopOnWarn</value>
		<value label="Deploy Always">deployAlways</value>
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
      <property name="daticalDBLabels" required="false">
        <property-ui type="textBox" label="Datical DB Labels" description="The Datical DB Labels of the Change Sets to deploy." />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Generated SQL ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
              var genSQL = line.replace("Generated SQL ready at ", "");
              properties.put("DaticalSQL", genSQL);
        });
        scanner.register("(?i)Generated rollback SQL ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
              var genExportSQL = line.replace("Generated rollback SQL ready at ", "");
              properties.put("DaticalRollbackSQL", genExportSQL);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
              var report = line.replace("Report ready at ", "");
              properties.put("DaticalReport", report);
              var reportDir = report.replace("forecastReport.html", "");
              properties.put("DaticalReportDir", reportDir);
        });

		//forecast
        scanner.register("(?i)Forecast detected the following problems:",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();
        
        

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="forecast.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Export Database Schema (Snapshot)">
    <description>Creates a Datical DB Snapshot of a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //snapshot
        scanner.register("(?i)Snapshot of database",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var snapshot = line.split(" at ");
            properties.put("DaticalSnapshot", snapshot[1]);
        });

        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="snapshot.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Read Datical DB History">
    <description>Details the Datical DB deployment history of a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //history
        scanner.register("(?i)Changelog",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });

        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="history.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Sync Datical DB Change Log">
    <description>Marks a Server as deployed based on a Datical DB Project without executing changes.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        scanner.scan();
        

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="changelogsync.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Delete Datical DB Check Sums">
    <description>Removes Change Set Check Sums from a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //clearCheckSums
        scanner.register("(?i)Successfully cleared checksums in database",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="clearchecksums.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="View Datical DB Status">
    <description>Reports on the current Status of a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="false">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //status
        scanner.register("(?i) is up-to-date ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i) is at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="status.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="View Datical DB Status Details">
    <description>Reports on the detailed current Status of a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="false">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //status
        scanner.register("(?i) is up-to-date ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i) is at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="statusdetails.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>


  <step-type name="Check Datical DB Drivers">
    <description>Returns the current database drivers settings used by Datical DB.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //checkdrivers
        scanner.register("(?i)Found ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });

        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="checkdrivers.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Validate Datical DB Rules">
    <description>Validates the current Datical DB Rules located within the Project.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="checkrules.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Datical DB Rollback">
    <description>Performs a Rollback on a Server given a specific version.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServer" required="true">
        <property-ui type="textBox" label="Datical DB Server" description="The Datical DB Server you wish to manage with Datical DB. You can determine this value by opening Datical DB and choosing a server listed in your Deployment Plan." />
      </property>
      <property name="daticalDBVersion" required="true">
        <property-ui type="textBox" label="Datical DB Rollback Version" description="Valid Versions include the following: 'changeid:id=CHANGESETID', 'count:n=COUNT', 'date:yyyy-MM-dd=YYYY-MM-DD', or 'tag:dbtag=DBTAG'." />
      </property>
      <property name="daticalDBExportSQL" required="false">
        <property-ui type="checkBox" label="Export SQL" description="If checked, Datical DB will export SQL used to rollback the server." />
      </property>
      <property name="daticalDBOnlyExportSQL" required="false">
        <property-ui type="checkBox" label="ONLY Export SQL" description="If checked, Datical DB will ONLY export SQL. No rollback will be performed." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //rollback
        scanner.register("(?i)Rolled ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="rollback.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Get Database Differences (Change Log)">
    <description>Creates a Change Log based on the differences between two servers. Can append to an existing Change Log.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServerReference" required="true">
        <property-ui type="textBox" label="Datical DB Reference Server" description="The Datical DB Server used as the Reference for the differences. This one will be more 'up to date'." />
      </property>
      <property name="daticalDBServerComparison" required="true">
        <property-ui type="textBox" label="Datical DB Comparison Server" description="The Datical DB Server used as the Comparison for the differences. This one will be less 'up to date'." />
      </property>
      <property name="daticalDBChangeLog" required="false">
        <property-ui type="textBox" label="Datical DB Output File" description="Change Log to create or append to. Optional." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
      <property name="daticalDBLabels" required="false">
      	<property-ui type="textBox" label="Datical DB Labels" description="Datical DB Labels to assign to created Change Sets." />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //diff*
        scanner.register("(?i)Target database instance",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Diff of databases",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var diffreport = line.split(" at ");
            properties.put("DaticalDiff", diffreport[1]);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="diffchangelog.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>

  <step-type name="Get Database Differences (Report)">
    <description>Generates a Report on the differences between two servers.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBServerReference" required="true">
        <property-ui type="textBox" label="Datical DB Reference Server" description="The Datical DB Server used as the Reference for the differences. This one will be more 'up to date'." />
      </property>
      <property name="daticalDBServerComparison" required="true">
        <property-ui type="textBox" label="Datical DB Comparison Server" description="The Datical DB Server used as the Comparison for the differences. This one will be less 'up to date'." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //diff*
        scanner.register("(?i)Target database instance",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Diff of databases",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
              var diffreport = line.split(" at ");
              properties.put("DaticalDiffReport", diffreport[1]);
        });

        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="diff.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>
  
  <step-type name="Add Datical DB Project">
    <description>Creates a new Datical DB Project in the project directory. Useful for when you are only supplied a changelog.xml and wish to create the project dynamically.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is to be located." default-value="."/>
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="createnewproject.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>  
  
  <step-type name="Add Datical DB Database Definition">
    <description>Creates a new Datical DB Project in the project directory. Useful for when you are only supplied a changelog.xml and wish to create the project dynamically.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer)" default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is to be located." default-value="."/>
      </property>
      <property name="daticalDBVendor" required="true">
        <property-ui type="selectBox" label="Datical DB Database Vendor" description = "The target database vendor. Valid values are Oracle, DB2, MSSQL, MySQL, PostgreSQL."/>
		<value label="DB2">DB2</value>
		<value label="Oracle">Oracle</value>
 		<value label="MSSQL">MSSQL</value>
  		<value label="MySQL">MySQL</value>
  		<value label="PostgreSQL">PostgreSQL</value>
      </property>
      <property name="daticalDBStepName" required="true">
      	<property-ui type="textBox" label="Datical DB Step Name" description = "This is an Internal user friendly name for your database." default-value="MyDB"/>
      </property>
      <property name="daticalDBHost" required="true">
      	<property-ui type="textBox" label="Datical DB Database Hostname" description = "The hostname or IP address of the Database Server." default-value="192.168.0.1"/>
      </property>
      <property name="daticalDBPort" required="true">
      	<property-ui type="textBox" label="Datical DB Database Port" description = "The port of the Database Server." default-value="50000"/>
      </property>
      <property name="daticalDBUsername" required="true">
      	<property-ui type="textBox" label="Datical DB Database Username" description = "The username of the Database Server." default-value="db2inst1"/>
      </property>
      <property name="daticalDBPassword" required="true">
      	<property-ui type="secureBox" label="Datical DB Database Password" description = "The password of the Database Server." default-value="p455w0rd"/>
      </property>
		<!-- OPTIONAL -->
      <property name="daticalDBContext" required="false">
      	<property-ui type="textBox" label="Datical DB Context" description = "The Context used by Datical DB. Optional."/>
      </property>
      <property name="daticalDBDefaultSchemaName" required="false">
      	<property-ui type="textBox" label="Datical DB Default Schema Name" description = "The Default Schema Name used by Datical DB. Optional."/>
      </property>
      <property name="daticalDBDefaultCatalogName" required="false">
      	<property-ui type="textBox" label="Datical DB Default Catalog Name" description = "The Default Catalog Name used by Datical DB. Optional."/>
      </property>
		<!-- platform specific -->
		<!-- DB2, MySQL, PostgreSQL -->
      <property name="daticalDBDatabaseName" required="false">
      	<property-ui type="textBox" label="Datical DB Database Name (DB2, MSSQL, MySQL, PostgreSQL)" description = "The Database Name. Required for DB2, MySQL, PostgreSQL."/>
      </property>
      <property name="daticalDBSID" required="false">
      	<property-ui type="textBox" label="Datical DB SID (Oracle)" description = "The Database SID. Either SID or Service Name is required for Oracle."/>
      </property>
      <property name="daticalDBServiceName" required="false">
      	<property-ui type="textBox" label="Datical DB Service Name (Oracle)" description = "The Database Service Name. Either SID or Service Name is required for Oracle."/>
      </property>
		<!-- MSSQL -->
      <property name="daticalDBIsIntegratedSecurity" required="false">
      <!-- TODO: true, false select list -->
      	<property-ui type="textBox" label="Integrated Security? (MSSQL)" description = "Determines if the database uses Integrated Security. Optional for MSSQL."/>
      </property>
      <property name="daticalDBApplicationName" required="false">
      	<property-ui type="textBox" label="Datical DB Application Name (MSSQL)" description = "The Datical DB Application Name. Optional for MSSQL."/>
      </property>
      <property name="daticalDBInstanceName" required="false">
      	<property-ui type="textBox" label="Datical DB Instance Name (MSSQL)" description = "The Datical DB Instance Name. Optional for MSSQL."/>
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="createnewdbdef.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>    

  <step-type name="Datical DB Install License">
    <description>Deploys a Datical DB project to a Server.</description>
    <properties>
      <property name="daticalDBCmd" required="true">
        <property-ui type="textBox" label="Datical DB Command" description="The full path to the Datical DB command (e.g., C:\DaticalDB\repl\hammer.bat or /opt/DaticalDB/repl/hammer). Ideally, create a property named daticalDBCmd with the appropriate value." default-value="${p:daticalDBCmd}" />
      </property>
      <property name="daticalDBDriversDir" required="true">
        <property-ui type="textBox" label="Datical DB Driver Directory" description="The full path where Datical DB drivers are located. Ideally, create a property named daticalDBDriversDir with the appropriate value." default-value="${p:daticalDBDriversDir}" />
      </property>
      <property name="daticalDBProjectDir" required="true">
        <property-ui type="textBox" label="Datical DB Project Directory" description="The full path where the Datical DB project is located." default-value="."/>
      </property>
      <property name="daticalDBLicensePath" required="true">
        <property-ui type="textBox" label="Datical DB License Path" description="The full path where the License File is located." />
      </property>
      <property name="daticalDBvm" required="false">
      	<property-ui type="textBox" label="Datical DB JVM" description="The Java Virtual Machine to use with Datical DB. (e.g.,  /usr/lib/jvm/java-7-openjdk-amd64)" />
      </property>
      <property name="daticalDBvmargs" required="false">
      	<property-ui type="textBox" label="Datical DB JVM Arguments" description="The Java Virtual Machine Arguments to use with Datical DB. (e.g., -Xms512M -Xmx1024M)" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put("Status", "Failure");
        }
        else {
            properties.put("Status", "Success");
        }
        
        //all
        scanner.register("(?i)The DaticalDB log file",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var log = line.replace("The DaticalDB log file is located at ", "");
            properties.put("DaticalLog", log);
        });
        scanner.register("(?i)cannot be found in the current project",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Please specify a database as an argument or using the dbdef property",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)No database specified.",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
        });
        scanner.register("(?i)Report ready at ",  function(lineNumber, line) {
        	scanner.addLOI(lineNumber);
            var report = line.replace("Report ready at ", "");
            properties.put("DaticalReport", report);
        });
        
        //installLicense
        
        scanner.scan();

     ]]></post-processing>
    <command program="${agent:GROOVY_HOME}/bin/groovy">
      <arg value="-cp" />
      <arg path="classes" />
      <arg file="installlicense.groovy" />
      <arg file="${PLUGIN_INPUT_PROPS}" />
      <arg file="${PLUGIN_OUTPUT_PROPS}" />
    </command>
  </step-type>
	
</plugin>
